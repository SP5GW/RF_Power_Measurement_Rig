INITIAL CONFIG

base image: Raspberry Pi OS (32-bit), A port of Debian Bookworm with Raspberry Pi Desktop, issued: 2024-03-15

configured from Raspberry Pi Imager

hostname: powermeter.local
user: powermeter
password: power

SSID: LINGUAP_IoT
PWD: Ulasek 2030

three files to be modified/created before first pi boot to enable ssh access via usb:

1) ./boot/config.txt
	add the following text as the last line of the file: dtoverlay=dwc2
2) ./boot/cmdline.txt
	add this as a parameter, just after last word in the string (start with space): modules-load=dwc2,g_ether
3) ./boot/ssh
	create empty file named ssh
	
	
	
Wait good few minutes before testing connectivity, now it shall be possible to login to your pi:

ssh powermeter@powermeter.local
password: power

ip address of wlan can be seen by typing ifconfig command after ssh to device

commands to obtain pinout info
	pinout
	pinctrl


ADDING POWER BUTTON AND STATUS LED

Configure UART by adding:
enable_uart=1 
in [all] section of /boot/config.txt file

This will allow the TX signal (GPIO14) to control stus LED

Test if your system supports wake-up from halt

	halt pi with command: sudo shutdown -h now
	then briefly short pins 5 and 6 (GPIO3 and GND), this shall wake up pi

go to /home/powermeter/services/power-management
sudo cp ./power-management.service /lib/systemd/system/
sudo systemctl start power-management.service
sudo systemctl status power-management.service
sudo systemctl enable power-management.service

https://www.makeuseof.com/troubleshoot-raspberry-pi-leds-solid-flashing-meaning/


https://gist.github.com/emxsys/a507f3cad928e66f6410e7ac28e2990f

ADDING POWER MEASUREMENT SERVICE

https://github.com/sbcshop/Power-Monitor-HAT


enable i2c interface: 
	run sudo raspi-config command then select interfacing options >> I2C >> click on enter to enable it.

check that i2c is indeed enabled:
	 sudo raspi-config nonint get_i2c
	 	0=true (interface is enabled)
	 sudo i2cdetect -y 1
	 	devices with address 40,41 and 42 shall be detected if hat is correctly installed

install ina219 python support
	sudo pip3 install adafruit-circuitpython-ina219 --break-system-packages
 
 clone demo repository
 	cd /home/powermeter
	mkdir ./pi-hat-adc
 	git clone https://github.com/sbcshop/Power-Monitor-HAT.git
	cd Power-Monitor-HAT
	cd RaspberryPi
	python3 demo.py
	
go to /home/powermeter/services/measurement-loop
sudo cp ./measurement-loop.service /lib/systemd/system/
sudo systemctl start measurement-loop.service
sudo systemctl status measurement-loop.service
sudo systemctl enable measurement-loop.service


ADDING WELCOME BANER

modify /etc/motd file. Its contents are displayed right after successful authentification and before shell.

at the end of motd file add following line
For more info type cat unit-info ...

in home directory create unit-info file with the following content:


##################################################################################################
#     RF Power Meter calibrated for HF Ham bands.                                                #
#     Main HW components include:                                                                #
#         RF Power sensor:          AD8307                                                       #
#         ADC Converter:            Ina219   (Pi Hat - SBComponents)                             #
#         TFT Display:              ST7789VW (Mini PiTFT 1,3'' 240x240px - Adafruit 4484)        #
#         Halt/Wake-up Controller:  see project documentation for details                        #
#                                                                                                #
#     Control software has been broken into three systemd services written in Python:            #
#         power-management.service - controlling Pi halt/wake-up process                         #
#         measurement-loop.service - measuring inpu power levels                                 #
#         display-handler.service - controlling TFT display used for measurement presentation    #
#                                                                                                #
#     For more details see: https://github.com/sp5gw/RF_Power_Meter                              #
#                                                                                                #   
#                                                            May - June 2024, SP5GW              #
#                                                                                                #
##################################################################################################

alternative 

backup original motd file
sudo cp /etc/motd /etc/motd.old

copy below text into /etc/motd file 
The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.

#########################################################################
#     RF Power Meter calibrated for HF Ham bands.                       #
#                                                                       #
#     Main HW components include:                                       #
#         RF Power sensor:          AD8307                              #
#					(pre-assembled unit from        # 
#                                        Amazon.com - noname            #
#         ADC Converter:            Ina219                              #   
#                                       (Pi Hat - SBComponents)         #
#         TFT Display:              ST7789VW                            #
#                                       (Mini PiTFT 1,3'' 240x240px     #
#                                        Adafruit 4484)                 #
#         Halt/Wake-up Controller:  see project documentation           #
#                                                                       #
#     Control software has been broken into three systemd services      # 
#     written in Python:                                                #
#         power-management.service - controlling Pi halt/wake-up        #
#                                    process                            #
#         measurement-loop.service - measuring input power levels       #
#         display-handler.service - controlling TFT display             #
#                                                                       #
#     For more details see: https://github.com/sp5gw/RF_Power_Meter     #
#                                                                       #   
#                          May - July 2024, Andrzej Mazur, SP5GW.       #
#                                                                       #
#########################################################################


ADDING DISPLAY SERVICE

Installation of necessary drivers (outside virtual environment)
https://learn.adafruit.com/adafruit-mini-pitft-135x240-color-tft-add-on-for-raspberry-pi?view=all


cd ~
sudo pip3 install --upgrade adafruit-python-shell click
sudo apt-get install -y git
git clone https://github.com/adafruit/Raspberry-Pi-Installer-Scripts.git
cd Raspberry-Pi-Installer-Scripts
sudo -E env PATH=$PATH python3 adafruit-pitft.py --display=st7789_240x240 --rotation=180 --install-type=console

<<<at the end of install process you will be asked to reboot, after reboot is complete you will see console promt on the display>>>

Installation of Blinka libraries:
https://learn.adafruit.com/circuitpython-on-raspberrypi-linux/installing-circuitpython-on-raspberry-pi

wget https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/master/raspi-blinka.py
sudo python3 raspi-blinka.py


test i2c and spio
ls /dev/i2c* /dev/spi*
you shall get:
/dev/i2c-1  /dev/spidev0.0  /dev/spidev0.1

sudo pip3 install adafruit-circuitpython-rgb-display
sudo apt-get install fonts-dejavu
sudo apt-get install python3-pil
sudo apt-get install python3-numpy


go to /home/powermeter/services/display-handler
sudo cp ./display-handler.service /lib/systemd/system/
sudo systemctl start display-handler.service
sudo systemctl status display-handler.service
sudo systemctl enable display-handler.service



setting up act_led 

in config.txt file:


then in the code:

to turn act_led on:
echo 1 | sudo tee /sys/class/leds/ACT/brightness
echo default-on | sudo tee /sys/class/leds/ACT/trigger

to turn act_led off:
echo 0 | sudo tee /sys/class/leds/ACT/brightness
echo none | sudo tee /sys/class/leds/ACT/trigger

other interesting settings:
echo cpu0 | sudo tee /sys/class/leds/ACT/trigger
echo mmc0 | sudo tee /sys/class/leds/ACT/trigger
echo actpwr | sudo tee /sys/class/leds/ACT/trigger



Bazooka
https://0x9900.com/building-a-double-bazooka-antenna/
https://www.kapstadt.de/DF1KW-ZS1AI/build-double-bazooka.pdf
https://k7mem.com/Ant_Freq_Wavelength.html


net
https://the247dxnet.home.blog
KE0SRL
247DXnet. (14.247 at 2000Z)
V31EC
https://netfinder.radio/nets/view/14-247-dx-net




scp -r /home/powermeter/services andrzejmazur@macbook-pro-apple.home:/Users/andrzejmazur
scp -r /home/powermeter/unit-info andrzejmazur@macbook-pro-apple.home:/Users/andrzejmazur

scp -r /Users/andrzejmazur/Documents/RF_Power_Meter/sources/custom_motd powermeter@powermeter.local:/home/powermeter/
scp /Users/andrzejmazur/Documents/RF_Power_Meter/sources/custom_motd/motd powermeter@powermeter.local:/home/powermeter/